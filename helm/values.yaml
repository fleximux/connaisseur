# configure connaisseur deployment
deployment:
  replicasCount: 3
  image: securesystemsengineering/connaisseur:v1.5.0
  helmHookImage: securesystemsengineering/connaisseur:helm-hook-v1.0
  imagePullPolicy: Always
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# configure connaisseur service
service:
  type: ClusterIP
  port: 443

# configure access to the notary server
notary:
  # domain to the notary server. can be `null` or non-existant to use
  # the public Docker Hub notary server
  host: notary.docker.io
  # only for insecure notary instances with selfsigned certificates.
  selfsigned: false
  # selfsignedCert: |
  #   -----BEGIN CERTIFICATE-----
  #   -----END CERTIFICATE-----

  # if notary uses an authentication server, give a user and password
  # with pull rights
  # The default we use is the notary instance from docker.io which is
  # accessible without authentication for public repositories
  auth:
    enabled: false
    # enter user/pass directly
    # these are placeholders and should be changed!
    user: notaryuser
    password: Password123
    # or use a predefined secret, which needs the fields 'NOTARY_USER'
    # and 'NOTARY_PASS'
    secretName: null
  # the public part of the root keys, for verifying notary's signatures
  rootPubKeys:
    # general schema
    # <key-id>: |
    #   -----BEGIN PUBLIC KEY-----
    #   -----END PUBLIC KEY-----
    # e.g.
    # 6b35860633a0cf852670fd9b5c12ba068875f3804d6711feb16fcd74c723c816: |
    #   -----BEGIN PUBLIC KEY-----
    #   MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAETBDLAICCabJQXB01DOy315nDm0aD
    #   BREZ4aWG+uphuFrZWw0uAVLW9B/AIcJkHa7xQ/NLtrDi3Ou5dENzDy+Lkg==
    #   -----END PUBLIC KEY-----
    # 5cc8d0bc980f600ec41c29974014626d69e3b1dad47540c9183965f0055e12cd: |
    #   -----BEGIN PUBLIC KEY-----
    #   MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOXYta5TgdCwXTCnLU09W5T4M4r9f
    #   QQrqJuADP6U7g5r9ICgPSmZuRHP/1AYUfOQW3baveKsT969EfELKj1lfCA==
    #   -----END PUBLIC KEY-----
  # if you use Azure Container Registry (ACR) for your notary
  # changes some behaviour, such as health probes and how to retrieve auth tokens
  # for compatibility with ACR set to `true`
  isAcr: false

# the image policy, which defines all repositories that need to be
# verified. more detail in the git repo README.md
policy:
  - pattern: "*:*"
    verify: true
  - pattern: "k8s.gcr.io/*:*"
    verify: false
  - pattern: "docker.io/securesystemsengineering/connaisseur:*"
    verify: false

# in detection mode, deployment will not be denied, but only prompted
# and logged. This allows testing the functionality without
# interrupting operation.
detection_mode: false

# debug: true
